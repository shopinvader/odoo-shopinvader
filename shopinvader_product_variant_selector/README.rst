====================================
Shopinvader Product Variant Selector
====================================

.. 
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! This file is generated by oca-gen-addon-readme !!
   !! changes will be overwritten.                   !!
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! source digest: sha256:696c051f2628c4650e000e80e20615d9b2bb6f3d2388c138ef993395123f4555
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

.. |badge1| image:: https://img.shields.io/badge/maturity-Beta-yellow.png
    :target: https://odoo-community.org/page/development-status
    :alt: Beta
.. |badge2| image:: https://img.shields.io/badge/licence-AGPL--3-blue.png
    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html
    :alt: License: AGPL-3
.. |badge3| image:: https://img.shields.io/badge/github-shopinvader%2Fodoo--shopinvader-lightgray.png?logo=github
    :target: https://github.com/shopinvader/odoo-shopinvader/tree/14.0/shopinvader_product_variant_selector
    :alt: shopinvader/odoo-shopinvader

|badge1| |badge2| |badge3|

This is shopinvader the odoo module for the new generation of e-commerce.

This module adds the field `variant_selector` in the product variant metadata (exported to algolia or elastic).
The value of the field contains the possible combinations of variants that are available.
This ease frontend development of variant selectors.


Example of value
---------------------


.. code-block:: python

    [
        {
            "name": "Frame Type",
            "values": [
                {
                    "name": "Poster",
                    "sku": "Poster-White-70x50cm",
                    "selected": True,
                    "available": True,
                },
                {
                    "name": "Wooden",
                    "sku": "Wooden-White-70x50cm",
                    "selected": False,
                    "available": True,
                },
            ],
        },
        {
            "name": "Frame Color",
            "values": [
                {
                    "name": "White",
                    "sku": "Poster-White-70x50cm",
                    "selected": True,
                    "available": True,
                },
                {
                    "name": "Black",
                    "sku": "Poster-Black-70x50cm",
                    "selected": False,
                    "available": True,
                },
                {
                    "name": "Grey",
                    "sku": "Poster-Grey-70x50cm",
                    "selected": False,
                    "available": True,
                },

            ],
        },
        {
            "name": "Poster Size",
            "values": [
                {
                    "name": "45x30cm",
                    "sku": "",
                    "selected": False,
                    "available": False,
                },
                {
                    "name": "70x50cm",
                    "sku": "Poster-White-70x50cm",
                    "selected": True,
                    "available": True,
                },
                {
                    "name": "90x60cm",
                    "sku": "Poster-White-90x60cm",
                    "selected": False,
                    "available": True,
                },
            ],
        },
    ],

Understanding the way to select attributes
------------------------------------------------

It's also important to understand how variants are selected and how attributes' values are filtered.

Imagine a case where you have shoes with
- 6 sizes: 15, 16, 17, 18, 19, 20
- 3 colors: Green, Red, Yellow

and some exceptions:
- Green is available in size: 18, 19
- Red is available in size: 15, 16, 17
- Yellow is available in size: 18, 19, 20

In your ERP you have configured to select first the size then the color.
And the default variant is the first "Green 18"

Step 1 : You go to the page of your product.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You will have:

.. code-block:: python

    size : 15, 16, 17, [18], 19, 20
    color : [Green], (Red), Yellow

    [] mean selected
    () mean not available


Only the color Green and Yellow are available because the size 18 is selected.


Step 2: Now you select the color Yellow
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You will have:

.. code-block:: python

    size : 15, 16, 17, [18], 19, 20
    color : Green, (Red), [Yellow]

Even if you select the color Yellow the size are now filtered because the second filter cannot affect the first one.


Step 3: Now you select the size 16
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

As only the Red color is available for this size you are redirected to the Red shoes and you have

.. code-block:: python

    size : 15, [16], 17, 18, 19, 20
    color : (Green), [Red], (Yellow)


Why not trying to filter the size when changing the color?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Allowing this would mean that if you select the size 16 you will have something like this:


.. code-block:: python

    size : 15, [16], 17, (18), (19), (20)
    color : (Green), [Red], (Yellow)


And you will be locked in this situation without any possibility to select the Yellow shoes with size 19. There is an order for filling/selecting the value of each options and selecting a value should only impact the next attribute not the previous one.


This is the Odoo side of Shopinvader_.

.. _Shopinvader: https://shopinvader.com

**Table of contents**

.. contents::
   :local:

Bug Tracker
===========

Bugs are tracked on `GitHub Issues <https://github.com/shopinvader/odoo-shopinvader/issues>`_.
In case of trouble, please check there if your issue has already been reported.
If you spotted it first, help us to smash it by providing a detailed and welcomed
`feedback <https://github.com/shopinvader/odoo-shopinvader/issues/new?body=module:%20shopinvader_product_variant_selector%0Aversion:%2014.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.

Do not contact contributors directly about support or help with technical issues.

Credits
=======

Authors
~~~~~~~

* Akretion

Contributors
~~~~~~~~~~~~

* Sebastien BEAU <sebastien.beau@akretion.com>

Other credits
~~~~~~~~~~~~~

The development of this module has been financially supported by:

* Abilis
* Cosanum

Maintainers
~~~~~~~~~~~

This module is part of the `shopinvader/odoo-shopinvader <https://github.com/shopinvader/odoo-shopinvader/tree/14.0/shopinvader_product_variant_selector>`_ project on GitHub.

You are welcome to contribute.
